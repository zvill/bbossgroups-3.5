<project name="build all project" default="default" basedir=".">
	<description>
		build all project build file
	</description>
	<tstamp prefix="start" />

	<tstamp>
		<format property="compile.timestamp" pattern="yyyy-MM-dd HH.mm.ss" />
	</tstamp>
	<typedef resource="org/tigris/subversion/svnant/svnantlib.xml"
		classpath="svnant.jar" />
	<typedef resource="net/sf/antcontrib/antlib.xml" classpath="ant-contrib-1.0b3.jar" />


	<target name="help">
		<echo>
			ant:构建所有任务
			ant complete:构建所有任务
			ant build-persistent：构建poolman
			ant
			distrib-bboss-persistent-jars:分发poolman的jar包到相关工程
			${portallib},
			${casserverlib},
			${active-ext-lib},
			${bboss-ws-lib},
			${bboss-core-lib},
			${cms_baseline-lib},
			${bboss-taglib-lib},
			${kettle-lib}
			${monitorconsole-lib}
			${bboss-mvc-lib}
			ant build-bboss-taglib： 构建标签库,执行依赖构建
			ant build-bboss-taglib-only：
			构建标签库,不执行依赖构建
			ant
			distrib-bboss-taglib-jars:分发标签库jar包[frameworkset.jar]
			${portallib}
			${casserverlib}
			${bboss-ws-lib}

			${cms_baseline-lib}
			${monitorconsole-lib}
			${bboss-mvc-lib}
			ant build-bboss-util:构建util工具包
			ant
			distrib-bboss-util-jars:分发工具包到以下目录[frameworkset-util.jar]
			${active-ext-lib},
			${bboss-ws-lib},
			${bboss-core-lib},
			${bbossevent-lib},
			${cms_baseline-lib},
			${bboss-persistent-lib},
			${bboss-taglib-lib},
			${kettle-lib},
			${portallib},
			${casserverlib}
			${monitorconsole-lib}
			${bboss-mvc-lib}
			ant build-bboss-mvc :构建mvc框架包，并且执行依赖构建
			ant build-bboss-core
			:构建core框架包，并且执行依赖构建
			ant build-bboss-core-only :构建core框架包，不执行依赖构建
			ant
			distrib-bboss-core-jars
			:分发core框架包到以下工程[bboss-schedule.jar,bboss-netty.jar,bboss-core.jar,bboss-camel.jar,bboss-mina.jar,bboss-jms.jar,bboss-ws.jar,bboss-tlq.jar,bboss-rmi.jar,bboss-http.jar]
			${bbossevent-lib},
			${bbossevent-client-lib},
			${cms_baseline-lib},
			${bboss-ws-lib},
			${active-ext-lib},
			${kettle-lib}
			${bbosscore-client-lib}
			${bboss-mvc-lib}
			ant
			distrib-bboss-core-rpc-conf:分发core框架rpc服务调用配置文件到以下工程[manager-rpc-service.xml,manager-rpc-mina.xml,manager-rpc-jms.xml,manager-rpc-webservice.xml,manager-rpc-netty.xml]
			${cms_baseline_resources},
			${active-ext_resources},
			${bboss-ws_resources},
			${bbossevent_resources},
			${kettle_resources}
			ant build-bboss-event:构建事件框架，执行依赖构建
			ant build-bboss-event-only:构建事件框架，不执行依赖构建
			ant
			distrib-bboss-event-jars:分发事件框架的jar包,bboss-event.jar
			${cms_baseline-lib},
			${kettle-lib},
			${active-ext-lib}
			ant build-bboss-ws：构建webservice测试用例
			ant
			build-active-ext-withdepends：构建mq扩展接口工程，执行依赖构建
			ant
			build-active-ext-only：构建mq扩展接口工程，不执行依赖构建
			ant
			distrib-active-ext-jars：分发mq扩展接口jar包[activemq-ext-console.jar,parameters-handler.jar]
			${cms_baseline-lib},
			${kettle-lib}
			ant build-cms_baseline：执行系统管理构建任务，执行依赖构建
			ant
			build-cms_baseline_only：执行系统管理构建任务，不执行依赖构建
			ant
			distrib-mqconfigefiles：分发mq-service.xml文件
			${active-ext_resources},
			${bboss-ws_resources},
			${kettle_resources}
			ant
			distrib-cms_baseline-jars：分发系统管理jar包，mq服务jar包到不同的工程[mqservice.jar,mq-transferservice.jar]
			${kettle-lib},
			${active-ext-lib}
			ant build-kettle：构建kettle工程
			ant build-cim:构建cim工程
			ant
			svn-update-procedure：执行svn文件替换任务
		</echo>
	</target>
	<target name="default" depends="complete"
		description="default = build distribution package">
		<delete dir="${distrib}" />
	</target>

	<!-- set global properties for this build -->
	<property file="build.properties" />
	<target name="complete"
		depends="build-persistent,build-bboss-taglib,build-bboss-util,build-bboss-core,build-bboss-rpc,build-bboss-event,build-active-ext-withdepends,build-cms_baseline,build-kettle"
		description="copy depends liberarys">

	</target>
	<target name="build-persistent" description="build bboss persistent project">
		<echo>build bboss persistent project</echo>
		<ant dir="${bboss-persistent}" />
		<echo>update ${portallib}/frameworkset-pool.jar</echo>
		<echo>update ${casserverlib}/frameworkset-pool.jar</echo>
		<echo>update ${active-ext-lib}/frameworkset-pool.jar</echo>
		<echo>update ${bboss-ws-lib}/frameworkset-pool.jar</echo>
		<echo>update ${bboss-core-lib}/frameworkset-pool.jar</echo>
		<echo>update ${cms_baseline-lib}/frameworkset-pool.jar</echo>
		<echo>update ${bboss-taglib-lib}/frameworkset-pool.jar</echo>
		<echo>update ${kettle-lib}/frameworkset-pool.jar</echo>
		<antcall target="distrib-bboss-persistent-jars">
		</antcall>
	</target>
	<target name="build-persistent-jdk6" description="build bboss persistent project">
		<echo>build bboss persistent project</echo>
		<ant dir="${bboss-persistent}" antfile="build-jdk16.xml" />
		<echo>update ${portallib}/frameworkset-pool.jar</echo>
		<echo>update ${casserverlib}/frameworkset-pool.jar</echo>
		<echo>update ${active-ext-lib}/frameworkset-pool.jar</echo>
		<echo>update ${bboss-ws-lib}/frameworkset-pool.jar</echo>
		<echo>update ${bboss-core-lib}/frameworkset-pool.jar</echo>
		<echo>update ${cms_baseline-lib}/frameworkset-pool.jar</echo>
		<echo>update ${bboss-taglib-lib}/frameworkset-pool.jar</echo>
		<echo>update ${kettle-lib}/frameworkset-pool.jar</echo>
		<antcall target="distrib-bboss-persistent-jars">
		</antcall>
	</target>
	<target name="build-persistent-jdk7" description="build bboss persistent project">
		<echo>build bboss persistent project</echo>
		<ant dir="${bboss-persistent}" antfile="build-jdk17.xml" />
		<echo>update ${portallib}/frameworkset-pool.jar</echo>
		<echo>update ${casserverlib}/frameworkset-pool.jar</echo>
		<echo>update ${active-ext-lib}/frameworkset-pool.jar</echo>
		<echo>update ${bboss-ws-lib}/frameworkset-pool.jar</echo>
		<echo>update ${bboss-core-lib}/frameworkset-pool.jar</echo>
		<echo>update ${cms_baseline-lib}/frameworkset-pool.jar</echo>
		<echo>update ${bboss-taglib-lib}/frameworkset-pool.jar</echo>
		<echo>update ${kettle-lib}/frameworkset-pool.jar</echo>
		<antcall target="distrib-bboss-persistent-jars">
		</antcall>
	</target>
	<target name="distrib-bboss-persistent-jars" description="distrib-bboss-persistent-jars">
		<for
			list="${bigdata-lib},${bigdatamonitor-lib},${bboss-security-lib},${bboss-schedule-lib},${bboss-plugin-wordpdf-lib-depends},${bbossupload-lib},${demoproject-lib},${portallib},${casserverlib},${active-ext-lib},${cms_baseline-lib},${bboss-taglib-lib},${taglibdemo-lib},${kettle-lib},${monitorconsole-lib},${monitorconsole-compilelib},${bboss-site-lib},${creatoresb-lib},${mvc-lib},${persistent-lib},${xmlrequest-lib},${bboss-plugin-hibernate-lib},${sessionmonitor-lib},${bboss-gencode-lib}"
			param="destdir">
			<sequential>
				<echo>@{destdir}-------------------------------</echo>
				<antcall target="svn-update-procedure">
					<param name="sourcedir" value="${bboss-persistent}/distrib" />
					<param name="filedir" value="@{destdir}" />
					<param name="files"
						value="frameworkset-pool.jar,frameworkset-pool-sources.jar" />
				</antcall>
			</sequential>
		</for>
	</target>
	<target name="build-bboss-plugin-wordpdf" description="build bboss-plugin-wordpdf project">
		<echo>build bboss-plugin-wordpdf project</echo>
		<ant dir="${bboss-plugin-wordpdf}" />

		<antcall target="distrib-bboss-plugin-wordpdf-jars">
		</antcall>
	</target>
	<target name="build-bboss-plugin-hessian" description="build bboss-plugin-hessian project">
		<echo>build bboss-plugin-hessian project</echo>
		<ant dir="${bboss-plugin-hessian}" />

		<antcall target="distrib-bboss-plugin-hessian-jars">
		</antcall>
	</target>
	<target name="distrib-bboss-plugin-wordpdf-jars" description="distrib-bboss-plugin-wordpdf-jars">
	</target>
	<target name="distrib-bboss-plugin-hessian-jars" description="distrib-bboss-plugin-hessian-jars">
		<for list="${demoproject-lib},${cms_baseline-lib}" param="destdir">
			<sequential>
				<echo>@{destdir}-------------------------------</echo>
				<antcall target="svn-update-procedure">
					<param name="sourcedir" value="${bboss-plugin-hessian}/distrib" />
					<param name="filedir" value="@{destdir}" />
					<param name="files"
						value="bboss-hessian.jar,bboss-hessian-test.jar" />
				</antcall>
			</sequential>
		</for>
		<for list="${bboss-site-lib}" param="destdir">
			<sequential>
				<echo>@{destdir}-------------------------------</echo>
				<antcall target="svn-update-procedure">
					<param name="sourcedir" value="${bboss-plugin-hessian}/distrib" />
					<param name="filedir" value="@{destdir}" />
					<param name="files"
						value="bboss-hessian.jar" />
				</antcall>
			</sequential>
		</for>
	</target>

	<target name="build-bboss-jodconverter-core" description="build bboss-jodconverter-core project">
		<echo>build bboss-jodconverter-core project</echo>
		<ant dir="${bboss-jodconverter-core}" />

		<antcall target="distrib-bboss-jodconverter-core-jars">
		</antcall>
	</target>
	<target name="distrib-bboss-jodconverter-core-jars" description="distrib-bboss-jodconverter-core-jars">
		<for list="${bboss-plugin-wordpdf-lib}" param="destdir">
			<sequential>
				<echo>@{destdir}-------------------------------</echo>
				<antcall target="svn-update-procedure">
					<param name="sourcedir" value="${bboss-jodconverter-core}/distrib" />
					<param name="filedir" value="@{destdir}" />
					<param name="files"
						value="bboss-jodconverter-core.jar,bboss-jodconverter-core-sources.jar" />
				</antcall>
			</sequential>
		</for>
	</target>
	<target name="build-bboss-taglib"
		depends="build-persistent,build-bboss-core,build-bboss-util"
		description="build bboss taglib project">
		<echo>build bboss taglib project</echo>
		<antcall target="build-bboss-taglib-only">
		</antcall>
	</target>

	<target name="build-bboss-taglib-only" description="build bboss taglib project">
		<echo>build bboss taglib project</echo>
		<ant dir="${bboss-taglib}" />
		<!-- common_old_tag<-cms_baseline [frameworkset.jar] common_old_tag<-bbosscore 
			[frameworkset.jar] common_old_tag<-cas server [frameworkset.jar] common_old_tag<-portal 
			[frameworkset.jar] common_old_tag<-bboss-ws [frameworkset.jar] -->
		<echo>update frameworkset.jar</echo>
		<antcall target="distrib-bboss-taglib-jars">
		</antcall>
	</target>

	<target name="distrib-bboss-taglib-jars" description="distrib-bboss-taglib-jars">
		<for
			list="${taglibdemo-lib},${i18n-lib},${bbossupload-lib},${demoproject-lib},${portallib},${casserverlib},${cms_baseline-lib},${monitorconsole-lib},${monitorconsole-compilelib},${bboss-site-lib},${creatoresb-lib},${mvc-lib},${xmlrequest-lib}"
			param="destdir">
			<sequential>
				<echo>@{destdir}-------------------------------</echo>
				<antcall target="svn-update-procedure">
					<param name="sourcedir" value="${bboss-taglib}/distrib" />
					<param name="filedir" value="@{destdir}" />
					<param name="files"
						value="frameworkset.jar,ditchnet-tabs-taglib.jar,htmlparser-1.5-20050925.jar" />
				</antcall>
			</sequential>

		</for>
		<for
			list="${bboss-gencode-lib},${bigdatamonitor-lib},${sessionmonitor-lib}"
			param="destdir">
			<sequential>
				<echo>@{destdir}-------------------------------</echo>
				<antcall target="svn-update-procedure">
					<param name="sourcedir" value="${bboss-taglib}/distrib" />
					<param name="filedir" value="@{destdir}" />
					<param name="files" value="frameworkset.jar,htmlparser-1.5-20050925.jar" />
				</antcall>
			</sequential>

		</for>
		<for list="${bboss-plugin-wordpdf-lib-depends}" param="destdir">
			<sequential>
				<echo>@{destdir}-------------------------------</echo>
				<antcall target="svn-update-procedure">
					<param name="sourcedir" value="${bboss-taglib}/distrib" />
					<param name="filedir" value="@{destdir}" />
					<param name="files" value="frameworkset.jar" />
				</antcall>
			</sequential>

		</for>

	</target>

	<target name="build-bboss-util" description="build bboss util project">
		<echo>build bboss util project</echo>
		<ant dir="${bboss-util}" />
		<!-- common_old_util<-active-ext [frameworkset-util.jar] common_old_util<-bboss-ws 
			[frameworkset-util.jar] common_old_util<-bbosscore [frameworkset-util.jar] 
			common_old_util<-bbossevent [frameworkset-util.jar] common_old_util<-cms_baseline 
			[frameworkset-util.jar] common_old_util<-common_old_dbcp [frameworkset-util.jar] 
			common_old_util<-common_old_tag [frameworkset-util.jar] common_old_util<-kettle 
			[frameworkset-util.jar] common_old_util<-portal [frameworkset-util.jar] common_old_util<-cas 
			server [frameworkset-util.jar] -->
		<echo>update frameworkset-util.jar</echo>
		<antcall target="distrib-bboss-util-jars">
		</antcall>
	</target>

	<target name="build-bboss-schedule" description="build bboss schedule project">
		<echo>build bboss schedule project</echo>
		<ant dir="${bboss-schedule}" />

		<echo>update frameworkset-schedule.jar</echo>
		<antcall target="distrib-bboss-schedule-jars">
		</antcall>
	</target>

	<target name="build-bboss-site" description="build bboss site project">
		<echo>build bboss site project</echo>
		<ant dir="${bboss-site}" />


	</target>

	<target name="build-bboss-velocity" description="build bboss velocity project">
		<echo>build bboss velocity project</echo>
		<ant dir="${bboss-velocity}" />
		<echo>update bboss-velocity.jar</echo>
		<antcall target="distrib-bboss-velocity-jars">
		</antcall>
	</target>

	<target name="build-bboss-soa" description="build bboss soa project">
		<echo>build bboss soa project</echo>
		<ant dir="${bboss-soa}" />
		<!-- common_old_util<-active-ext [frameworkset-util.jar] common_old_util<-bboss-ws 
			[frameworkset-util.jar] common_old_util<-bbosscore [frameworkset-util.jar] 
			common_old_util<-bbossevent [frameworkset-util.jar] common_old_util<-cms_baseline 
			[frameworkset-util.jar] common_old_util<-common_old_dbcp [frameworkset-util.jar] 
			common_old_util<-common_old_tag [frameworkset-util.jar] common_old_util<-kettle 
			[frameworkset-util.jar] common_old_util<-portal [frameworkset-util.jar] common_old_util<-cas 
			server [frameworkset-util.jar] -->
		<echo>update bboss-soa.jar</echo>
		<antcall target="distrib-bboss-soa-jars">
		</antcall>
	</target>

	<target name="build-bboss-bigdata" description="build bboss bigdata project">
		<echo>build bboss bigdata project</echo>
		<ant dir="${bigdata}" />
		<!-- common_old_util<-active-ext [frameworkset-util.jar] common_old_util<-bboss-ws 
			[frameworkset-util.jar] common_old_util<-bbosscore [frameworkset-util.jar] 
			common_old_util<-bbossevent [frameworkset-util.jar] common_old_util<-cms_baseline 
			[frameworkset-util.jar] common_old_util<-common_old_dbcp [frameworkset-util.jar] 
			common_old_util<-common_old_tag [frameworkset-util.jar] common_old_util<-kettle 
			[frameworkset-util.jar] common_old_util<-portal [frameworkset-util.jar] common_old_util<-cas 
			server [frameworkset-util.jar] -->
		<echo>update bboss-bigdata.jar</echo>
		<antcall target="distrib-bigdata-jars">
		</antcall>
	</target>

	<target name="distrib-bboss-util-jars" description="distrib-bboss-util-jars">
		<for
			list="${i18n-lib},${bigdata-lib},${bigdatamonitor-lib},${genproject-lib},${bboss-security-lib},${bboss-security-web-lib},${bboss-schedule-lib},${bboss-plugin-wordpdf-lib-depends},${bboss-plugin-hessian-lib},${bbossupload-lib},${demoproject-lib},${active-ext-lib},${bboss-core-lib},${bboss-rpc-lib},${bbossevent-lib},${cms_baseline-lib},${bboss-persistent-lib},${bboss-taglib-lib},${taglibdemo-lib},${kettle-lib},${portallib},${casserverlib},${monitorconsole-lib},${monitorconsole-compilelib},${bboss-mvc-lib},${bboss-site-lib},${creatoresb-lib},${bboss-clientproxy-lib},${mvc-lib},${persistent-lib},${xmlrequest-lib},${xmlserializable-lib},${bboss-plugin-hibernate-lib},${session-lib},${sessionmonitor-lib},${bboss-gencode-lib}"
			param="destdir">
			<sequential>
				<echo>@{destdir}-------------------------------</echo>
				<antcall target="svn-update-procedure">
					<param name="sourcedir" value="${bboss-util}/distrib" />
					<param name="filedir" value="@{destdir}" />
					<param name="files" value="frameworkset-util.jar" />
				</antcall>
			</sequential>
		</for>

		<for
			list="${bigdata-rt-lib},${bigdatamonitor-rt-lib},${genproject-rt-lib},${bboss-gencode-rt-lib}"
			param="destdir">
			<sequential>
				<echo>@{destdir}-------------------------------</echo>
				<antcall target="svn-update-procedure">
					<param name="sourcedir" value="${bboss-util}/distrib" />
					<param name="filedir" value="@{destdir}" />
					<param name="files" value="bboss-rt.jar" />
				</antcall>
			</sequential>
		</for>
	</target>

	<target name="distrib-bboss-schedule-jars" description="distrib-bboss-schedule-jars">
		<for list="${cms_baseline-lib}" param="destdir">
			<sequential>
				<echo>@{destdir}-------------------------------</echo>
				<antcall target="svn-update-procedure">
					<param name="sourcedir" value="${bboss-schedule}/distrib" />
					<param name="filedir" value="@{destdir}" />
					<param name="files" value="bboss-schedule.jar" />
				</antcall>
			</sequential>
		</for>
	</target>
	<target name="distrib-bboss-velocity-jars" description="distrib-bboss-velocity-jars">
		<for
			list="${i18n-lib},${bigdata-lib},${bigdatamonitor-lib},${genproject-lib},${bboss-security-lib},${bboss-util-lib},${bbossupload-lib},${demoproject-lib},${active-ext-lib},${cms_baseline-lib},${bboss-persistent-lib}/velocity,${bboss-taglib-lib},${taglibdemo-lib},${kettle-lib},${portallib},${casserverlib},${monitorconsole-lib},${monitorconsole-compilelib},${bboss-site-lib},${creatoresb-lib},${bboss-clientproxy-lib},${mvc-lib},${persistent-lib},${xmlrequest-lib},${xmlserializable-lib},${bboss-plugin-hibernate-lib},${sessionmonitor-lib},${bboss-gencode-lib}"
			param="destdir">
			<sequential>
				<echo>@{destdir}-------------------------------</echo>
				<antcall target="svn-update-procedure">
					<param name="sourcedir" value="${bboss-velocity}/distrib" />
					<param name="filedir" value="@{destdir}" />
					<param name="files" value="bboss-velocity.jar" />
				</antcall>
			</sequential>
		</for>
	</target>


	<target name="distrib-bigdata-jars" description="distrib-bboss-bigdata-jars">
		<for list="${bigdatamonitor-lib}" param="destdir">
			<sequential>
				<echo>@{destdir}-------------------------------</echo>
				<antcall target="svn-update-procedure">
					<param name="sourcedir" value="${bigdata}/distrib" />
					<param name="filedir" value="@{destdir}" />
					<param name="files" value="bigdata-impl.jar" />
				</antcall>
			</sequential>
		</for>
	</target>
	<target name="distrib-bboss-soa-jars" description="distrib-bboss-soa-jars">
		<for
			list="${bigdata-lib},${bigdatamonitor-lib},${demoproject-lib},${portallib},${casserverlib},${active-ext-lib},${bboss-rpc-lib},${bboss-core-lib},${cms_baseline-lib},${bboss-taglib-lib},${taglibdemo-lib},${kettle-lib},${monitorconsole-lib},${monitorconsole-compilelib},${bboss-mvc-lib},${bboss-site-lib},${creatoresb-lib},${bboss-clientproxy-lib},${xmlserializable-lib},${session-lib},${sessionmonitor-lib},${bboss-gencode-lib}"
			param="destdir">
			<sequential>
				<echo>@{destdir}-------------------------------</echo>
				<antcall target="svn-update-procedure">
					<param name="sourcedir" value="${bboss-soa}/distrib" />
					<param name="filedir" value="@{destdir}" />
					<param name="files" value="bboss-soa.jar" />
				</antcall>
			</sequential>
		</for>
	</target>
	<target name="build-bboss-core" depends="build-bboss-util"
		description="build bboss-core project">
		<antcall target="build-bboss-core-only">
		</antcall>
	</target>

	<target name="build-bboss-rpc" depends="build-bboss-core"
		description="build bboss-rpc project">
		<antcall target="build-bboss-rpc-only">
		</antcall>
	</target>
	<target name="build-bboss-mvc"
		depends="build-bboss-core,build-persistent,build-bboss-util,build-bboss-taglib"
		description="build bboss-mvc project">
		<antcall target="build-bboss-mvc-only">
		</antcall>
	</target>


	<target name="build-bboss-mvc-only" description="build bboss-mvc project">
		<ant dir="${bboss-mvc}" />
		<antcall target="distrib-bboss-mvc-jars" />
		<antcall target="distrib-bboss-mvc-resources" />
	</target>

	<target name="build-bboss-security" description="build bboss-security project">
		<ant dir="${bboss-security}" />
		<antcall target="distrib-bboss-security-jars" />
	</target>

	<target name="build-bboss-security-web" description="build bboss-security-web project">
		<ant dir="${bboss-security-web}" />
		<antcall target="distrib-bboss-security-web-jars" />
	</target>

	<target name="build-bboss-mvc-only-noresources" description="build bboss-mvc project">
		<ant dir="${bboss-mvc}" />
		<antcall target="distrib-bboss-mvc-jars" />
	</target>



	<target name="build-bboss-core-only" description="build bboss-core project">
		<echo>build bboss-core project</echo>
		<ant dir="${bboss-core}" />
		<!-- bbosscore<-bbossevent [bboss-core.jar,bboss-camel.jar,bboss-mina.jar,bboss-jms.jar,bboss-ws.jar] 
			bbosscore<-cms_baseline [bboss-core.jar,bboss-camel.jar,bboss-mina.jar,bboss-jms.jar,bboss-ws.jar] 
			bbosscore<-bboss-ws [bboss-core.jar,bboss-camel.jar,bboss-mina.jar,bboss-jms.jar,bboss-ws.jar] 
			bbosscore<-active-ext [bboss-core.jar,bboss-camel.jar,bboss-mina.jar,bboss-jms.jar,bboss-ws.jar] 
			bbosscore<-common_old_tag [bboss-core.jar] bbosscore<-common_old_util [bboss-core.jar] 
			bbosscore<-kettle [bboss-core.jar,bboss-camel.jar,bboss-mina.jar,bboss-jms.jar,bboss-ws.jar] 
			bbosscore<-portal [bboss-core.jar] bbosscore<-cas server [bboss-core.jar] -->
		<echo>update bboss core jars</echo>
		<antcall target="distrib-bboss-core-jars" />

		<!--<antcall target="distrib-bboss-core-rpc-conf" /> -->

	</target>

	<target name="build-bboss-rpc-only" description="build bboss-rpc project">
		<echo>build bboss-rpc project</echo>
		<ant dir="${bboss-rpc}" />

		<echo>update bboss rpc jars</echo>
		<antcall target="distrib-bboss-rpc-jars" />

		<!--<antcall target="distrib-bboss-core-rpc-conf" /> -->

	</target>


	<target name="build-bboss-core-jars-only" description="build bboss-core project">
		<echo>build-bboss-core-jars-only</echo>
		<ant dir="${bboss-core}" />
		<!-- bbosscore<-bbossevent [bboss-core.jar,bboss-camel.jar,bboss-mina.jar,bboss-jms.jar,bboss-ws.jar] 
			bbosscore<-cms_baseline [bboss-core.jar,bboss-camel.jar,bboss-mina.jar,bboss-jms.jar,bboss-ws.jar] 
			bbosscore<-bboss-ws [bboss-core.jar,bboss-camel.jar,bboss-mina.jar,bboss-jms.jar,bboss-ws.jar] 
			bbosscore<-active-ext [bboss-core.jar,bboss-camel.jar,bboss-mina.jar,bboss-jms.jar,bboss-ws.jar] 
			bbosscore<-common_old_tag [bboss-core.jar] bbosscore<-common_old_util [bboss-core.jar] 
			bbosscore<-kettle [bboss-core.jar,bboss-camel.jar,bboss-mina.jar,bboss-jms.jar,bboss-ws.jar] 
			bbosscore<-portal [bboss-core.jar] bbosscore<-cas server [bboss-core.jar] -->
		<echo>update bboss core jars</echo>
		<antcall target="distrib-bboss-core-jars" />
	</target>

	<target name="distrib-netty-jars" description="distrib-netty-jars">
		<for
			list="${cms_baseline-lib},${active-ext-lib},${kettle-lib},${monitorconsole-lib},${monitorconsole-compilelib},${creatoresb-lib}"
			param="destdir">
			<sequential>
				<echo>@{destdir}-------------------------------</echo>
				<antcall target="svn-update-procedure">
					<param name="sourcedir" value="${bboss-rpc}/distrib/lib/netty" />
					<param name="filedir" value="@{destdir}" />
					<param name="files" value="netty-3.2.1.Final.jar" />
				</antcall>
			</sequential>
		</for>
	</target>

	<target name="distrib-CGLIB-jars" description="distrib-CGLIB-jars">
		<for
			list="${bbossevent-lib},${cms_baseline-lib},${active-ext-lib},${kettle-lib},${monitorconsole-lib},${monitorconsole-compilelib},${creatoresb-lib}"
			param="destdir">
			<sequential>
				<echo>@{destdir}-------------------------------</echo>
				<antcall target="svn-update-procedure">
					<param name="sourcedir" value="${bboss-rpc}/distrib/lib/asm/" />
					<param name="filedir" value="@{destdir}" />
					<param name="files" value="asm-3.1.jar" />
				</antcall>
				<antcall target="svn-update-procedure">
					<param name="sourcedir" value="${bboss-rpc}/distrib/lib/cglib/" />
					<param name="filedir" value="@{destdir}" />
					<param name="files" value="cglib-2.2.jar" />
				</antcall>
			</sequential>
		</for>
	</target>
	<target name="distrib-bboss-core-jars" description="distrib-bboss-core-jars">
		<for
			list="${i18n-lib},${bigdata-lib},${bigdatamonitor-lib},${genproject-lib},${easyuidatagrid-lib},${demoproject-lib},${bbossevent-lib},${cms_baseline-lib},${active-ext-lib},${kettle-lib},${monitorconsole-compilelib},${monitorconsole-lib},${creatoresb-lib},${bboss-rpc-lib}"
			param="destdir">
			<sequential>
				<echo>@{destdir}-------------------------------</echo>
				<antcall target="svn-update-procedure">
					<param name="sourcedir" value="${bboss-core}/distrib" />
					<param name="filedir" value="@{destdir}" />
					<param name="files" value="bboss-core.jar" />
				</antcall>
			</sequential>
		</for>



		<for
			list="${bboss-security-lib},${bboss-security-web-lib},${bboss-schedule-lib},${bboss-plugin-wordpdf-lib-depends},${bboss-plugin-hessian-lib},${bboss-persistent-lib},${bbossupload-lib},${bboss-taglib-lib},${taglibdemo-lib},${portallib},${casserverlib},${mvc-lib},${xmlrequest-lib},${xmlserializable-lib},${persistent-lib},${bboss-plugin-hibernate-lib},${session-lib},${sessionmonitor-lib},${bboss-gencode-lib}"
			param="destdir">
			<sequential>
				<echo>@{destdir}-------------------------------</echo>
				<antcall target="svn-update-procedure">
					<param name="sourcedir" value="${bboss-core}/distrib" />
					<param name="filedir" value="@{destdir}" />
					<param name="files" value="bboss-core.jar" />
				</antcall>
			</sequential>
		</for>

		<for list="${bboss-mvc-lib},${bboss-site-lib},${bboss-clientproxy-lib}"
			param="destdir">
			<sequential>
				<echo>@{destdir}-------------------------------</echo>
				<antcall target="svn-update-procedure">
					<param name="sourcedir" value="${bboss-core}/distrib" />
					<param name="filedir" value="@{destdir}" />
					<param name="files" value="bboss-core.jar" />
				</antcall>
			</sequential>
		</for>





	</target>

	<target name="delete-bboss-aop-jars" description="delete-bboss-aop-jars">
		<for
			list="${demoproject-lib},${bbossevent-lib},${cms_baseline-lib},${active-ext-lib},${kettle-lib},${monitorconsole-compilelib},${monitorconsole-lib},${creatoresb-lib},${bboss-rpc-lib}"
			param="destdir">
			<sequential>
				<echo>@{destdir}-------------------------------</echo>
				<antcall target="clear-jars">

					<param name="filedir" value="@{destdir}" />
					<param name="files" value="bboss-core.jar" />
				</antcall>
			</sequential>
		</for>



		<for
			list="${bboss-security-lib},${bboss-security-web-lib},${bboss-schedule-lib},${bboss-plugin-wordpdf-lib-depends},${bboss-plugin-hessian-lib},${bboss-persistent-lib},${bbossupload-lib},${bboss-taglib-lib},${taglibdemo-lib},${portallib},${casserverlib},${mvc-lib},${xmlrequest-lib},${xmlserializable-lib},${persistent-lib},${bboss-plugin-hibernate-lib},${session-lib},${sessionmonitor-lib}"
			param="destdir">
			<sequential>
				<echo>@{destdir}-------------------------------</echo>
				<antcall target="clear-jars">
					<param name="filedir" value="@{destdir}" />
					<param name="files" value="bboss-core.jar" />
				</antcall>
			</sequential>
		</for>

		<for list="${bboss-mvc-lib},${bboss-site-lib},${bboss-clientproxy-lib}"
			param="destdir">
			<sequential>
				<echo>@{destdir}-------------------------------</echo>
				<antcall target="clear-jars">
					<param name="filedir" value="@{destdir}" />
					<param name="files" value="bboss-core.jar" />
				</antcall>
			</sequential>
		</for>





	</target>
	<target name="distrib-bboss-rpc-jars" description="distrib-bboss-rpc-jars">
		<for
			list="${demoproject-lib},${cms_baseline-lib},${active-ext-lib},${kettle-lib},${monitorconsole-compilelib},${monitorconsole-lib},${creatoresb-lib}"
			param="destdir">
			<sequential>
				<echo>@{destdir}-------------------------------</echo>
				<antcall target="svn-update-procedure">
					<param name="sourcedir" value="${bboss-rpc}/distrib" />
					<param name="filedir" value="@{destdir}" />
					<param name="files" value="bboss-rpc.jar" />
				</antcall>
			</sequential>
		</for>





		<for list="${bboss-site-lib},${bboss-clientproxy-lib}" param="destdir">
			<sequential>
				<echo>@{destdir}-------------------------------</echo>
				<antcall target="svn-update-procedure">
					<param name="sourcedir" value="${bboss-rpc}/distrib" />
					<param name="filedir" value="@{destdir}" />
					<param name="files" value="bboss-rpc.jar" />
				</antcall>
			</sequential>
		</for>
		<for list="${bboss-clientproxy-lib}" param="destdir">
			<sequential>
				<echo>@{destdir}/cxf-------------------------------</echo>
				<antcall target="svn-update-procedure">
					<param name="sourcedir" value="${bboss-rpc}/distrib" />
					<param name="filedir" value="@{destdir}/cxf" />
					<param name="files" value="bboss-rpc.jar" />
				</antcall>
			</sequential>
		</for>
		<for list="${xmlrequest-lib}" param="destdir">
			<sequential>
				<echo>@{destdir}/cxf-------------------------------</echo>
				<antcall target="svn-update-procedure">
					<param name="sourcedir" value="${bboss-rpc}/distrib" />
					<param name="filedir" value="@{destdir}" />
					<param name="files" value="bboss-rpc.jar" />
				</antcall>
			</sequential>
		</for>



	</target>

	<target name="distrib-bboss-mvc-jars" description="distrib-bboss-mvc-jars">
		<for
			list="${i18n-lib},${bigdata-lib},${bigdatamonitor-lib},${bboss-plugin-wordpdf-lib-depends},${bbossupload-lib},${demoproject-lib},${cms_baseline-lib},${monitorconsole-compilelib},${monitorconsole-lib},${creatoresb-lib},${mvc-lib},${xmlrequest-lib},${sessionmonitor-lib},${bboss-security-web-lib},${bboss-gencode-lib},${bboss-taglib-lib},${taglibdemo-lib},${bboss-site-lib},${bboss-security-lib}"
			param="destdir">
			<sequential>
				<echo>@{destdir}-------------------------------</echo>
				<antcall target="svn-update-procedure">
					<param name="sourcedir" value="${bboss-mvc}/distrib" />
					<param name="filedir" value="@{destdir}" />
					<param name="files" value="bboss-mvc.jar" />
				</antcall>
			</sequential>
		</for>
	</target>
	<target name="distrib-bboss-security-jars" description="distrib-bboss-security-jars">
		<for
			list="${bigdata-lib},${i18n-lib},${bigdatamonitor-lib},${bboss-site-lib},${bboss-plugin-wordpdf-lib-depends},${bbossupload-lib},${demoproject-lib},${cms_baseline-lib},${monitorconsole-compilelib},${monitorconsole-lib},${creatoresb-lib},${mvc-lib},${xmlrequest-lib},${session-lib},${sessionmonitor-lib},${bboss-security-web-lib},${bboss-gencode-lib}"
			param="destdir">
			<sequential>
				<echo>@{destdir}-------------------------------</echo>
				<antcall target="svn-update-procedure">
					<param name="sourcedir" value="${bboss-security}/distrib" />
					<param name="filedir" value="@{destdir}" />
					<param name="files" value="bboss-security.jar,bboss-security-sources.jar" />
				</antcall>
			</sequential>
		</for>
	</target>
	<target name="distrib-bboss-security-web-jars" description="distrib-bboss-security-web-jars">
		<for
			list="${bigdata-lib},${bigdatamonitor-lib},${cms_baseline-lib},${sessionmonitor-lib}"
			param="destdir">
			<sequential>
				<echo>@{destdir}-------------------------------</echo>
				<antcall target="svn-update-procedure">
					<param name="sourcedir" value="${bboss-security-web}/distrib" />
					<param name="filedir" value="@{destdir}" />
					<param name="files"
						value="bboss-security-web.jar,bboss-security-web-inf.jar,bboss-security-web-sources.jar" />
				</antcall>
			</sequential>
		</for>
	</target>

	<target name="distrib-bboss-mvc-resources" description="distrib-bboss-mvc-resources">
		<!--<for list="${demoproject}/WebRoot/WEB-INF,${bbossupload}/WebRoot/WEB-INF,${mvc}/WebRoot/WEB-INF,${xmlrequest}/WebRoot/WEB-INF" 
			param="destdir"> <sequential> <echo>@{destdir}</echo> <antcall target="svn-update-procedure"> 
			<param name="sourcedir" value="${bboss-mvc}/WebRoot/WEB-INF" /> <param name="filedir" 
			value="@{destdir}" /> <param name="files" value="treetag.tld,tabpane-taglib.tld,pager-taglib.tld" 
			/> </antcall> </sequential> </for> <for list="${demoproject}/WebRoot/include,${bbossupload}/WebRoot/include,${mvc}/WebRoot/include,${xmlrequest}/WebRoot/include" 
			param="destdir"> <sequential> <echo>@{destdir}</echo> <antcall target="svn-update-procedure"> 
			<param name="sourcedir" value="${bboss-mvc}/WebRoot/include" /> <param name="filedir" 
			value="@{destdir}" /> <param name="files" value="jquery-1.4.2.min.js,jquery.easyui.min.js,pager.js,pager_custom.js" 
			/> </antcall> </sequential> </for> -->
	</target>


	<target name="distrib-bboss-core-rpc-conf" description="distrib-bboss-core-rpc-conf">
		<!-- -->
		<for
			list="${cms_baseline_resources},${active-ext_resources},${kettle_resources},${monitorconsole_resources}"
			param="destdir">
			<sequential>
				<echo>@{destdir}-------------------------------</echo>
				<antcall target="svn-update-procedure">
					<param name="sourcedir" value="${bboss-rpc_resources}/org/frameworkset/spi" />
					<param name="filedir" value="@{destdir}/org/frameworkset/spi" />
					<param name="files"
						value="manager-rpc-service.xml,manager-rpc-rmi.xml,manager-rpc-jms.xml,manager-rpc-mina.xml,manager-rpc-netty.xml,manager-rpc-webservices.xml,manager-rpc-http.xml" />
				</antcall>
			</sequential>
		</for>

	</target>

	<target name="distrib-bboss-core-jgroups-conf" description="distrib-bboss-core-jgroups-conf">
		<!-- -->
		<for
			list="${cms_baseline_resources},${active-ext_resources},${kettle_resources},${monitorconsole_resources}"
			param="destdir">
			<sequential>
				<echo>@{destdir}-------------------------------</echo>
				<antcall target="svn-update-procedure">
					<param name="sourcedir"
						value="${bboss-rpc_resources}/org/frameworkset/spi/jgroups" />
					<param name="filedir" value="@{destdir}/org/frameworkset/spi/jgroups" />
					<param name="files" value="jgroups-tcp.xml,jgroups-udp.xml," />
				</antcall>

				<antcall target="svn-update-procedure">
					<param name="sourcedir" value="${bboss-rpc_resources}/org/frameworkset/spi" />
					<param name="filedir" value="@{destdir}/org/frameworkset/spi" />
					<param name="files" value="manager-rpc-service.xml" />
				</antcall>



			</sequential>
		</for>

	</target>

	<target name="build-bboss-event" depends="build-bboss-rpc,build-bboss-util"
		description="build bbossevent project">
		<echo>build bbossevent project</echo>

		<antcall target="build-bboss-event-only">
		</antcall>
	</target>

	<target name="build-bboss-event-only" description="build bbossevent project">
		<echo>build bbossevent project</echo>
		<ant dir="${bbossevent}" />
		<antcall target="distrib-bboss-event-jars">
		</antcall>
		<!--<antcall target="distrib-bboss-event-resource"> </antcall> -->

	</target>

	<target name="distrib-bboss-event-jars" description="distrib-bboss-event-jars">
		<!-- -->
		<for
			list="${bigdata-lib},${bigdatamonitor-lib},${cms_baseline-lib},${kettle-lib},${active-ext-lib},${creatoresb-lib},${monitorconsole-lib},${monitorconsole-compilelib},${demoproject-lib}"
			param="destdir">
			<sequential>
				<echo>@{destdir}-------------------------------</echo>
				<antcall target="svn-update-procedure">
					<param name="sourcedir" value="${bbossevent}/distrib" />
					<param name="filedir" value="@{destdir}" />
					<param name="files" value="bboss-event.jar" />
				</antcall>

			</sequential>
		</for>

	</target>

	<target name="distrib-bboss-event-resource" description="distrib-bboss-event-resource files">
		<!-- -->
		<for list="${cms_baseline_resources}" param="destdir">
			<sequential>
				<echo>@{destdir}-------------------------------</echo>
				<antcall target="svn-update-procedure">
					<param name="sourcedir" value="${bbossevent_resources}" />
					<param name="filedir" value="@{destdir}" />
					<param name="files" value="eventconf.xml" />
				</antcall>

			</sequential>
		</for>

	</target>




	<target name="build-active-ext-withdepends"
		depends="build-bboss-rpc,build-persistent,build-bboss-event,build-bboss-util,build-bboss-taglib"
		description="build active-ext project">
		<antcall target="build-active-ext-only">
		</antcall>
	</target>

	<target name="build-active-ext-only" description="build active-ext single project">
		<echo>build active-ext single project</echo>
		<ant dir="${active-ext}" />
		<!-- active-ext<-kettle [activemq-ext-console.jar parameters-handler.jar] 
			active-ext<-cmsbaseline [activemq-ext-console.jar parameters-handler.jar] -->
		<antcall target="distrib-active-ext-jars">
		</antcall>
	</target>

	<target name="distrib-active-ext-jars" description="distrib-active-ext-jars">
		<!-- -->
		<for
			list="${cms_baseline-lib},${kettle-lib},${monitorconsole-mqplugin-servicelib},${monitorconsole-lib},${monitorconsole-compilelib},${creatoresb-lib}"
			param="destdir">
			<sequential>
				<echo>@{destdir}-------------------------------</echo>
				<antcall target="svn-update-procedure">
					<param name="sourcedir" value="${active-ext}/distrib" />
					<param name="filedir" value="@{destdir}" />
					<param name="files" value="activemq-ext-console.jar,activemq-monitor.jar" />
				</antcall>
			</sequential>
		</for>
		<for
			list="${cms_baseline-lib},${kettle-lib},${monitorconsole-compilelib},${monitorconsole-lib},${creatoresb-lib}"
			param="destdir">
			<sequential>
				<echo>@{destdir}-------------------------------</echo>
				<antcall target="svn-update-procedure">
					<param name="sourcedir" value="${active-ext}/distrib" />
					<param name="filedir" value="@{destdir}" />
					<param name="files" value="parameters-handler.jar" />
				</antcall>
			</sequential>
		</for>

	</target>

	<target name="build-cms_baseline"
		depends="build-active-ext-withdepends,build-bboss-rpc,build-persistent,build-bboss-event,build-bboss-util,build-bboss-taglib"
		description="build cms_baseline project">
		<antcall target="build-cms_baseline_only" />
	</target>





	<target name="distrib-mqconfigefiles" description="distrib-mqconfigefiles">
		<for list="${active-ext_resources},${kettle_resources}" param="destdir">
			<sequential>
				<echo>@{destdir}-------------------------------</echo>
				<antcall target="svn-update-procedure">
					<param name="sourcedir" value="${cms_baseline_resources}/org/frameworkset/mq" />
					<param name="filedir" value="@{destdir}/org/frameworkset/mq" />
					<param name="files" value="mq-service.xml" />
				</antcall>
			</sequential>
		</for>

	</target>
	<target name="build-cms_baseline_only" description="build cms_baseline project">
		<echo>build cms_baseline project only</echo>
		<!-- 1.获取代码 2.编译代码 3.生成文档和报告 -->

		<ant dir="${cms_baseline}" />
		<!-- cmsbaseline<-active-ext [mqservice.jar,mq-transferservice.jar] -->
		<!-- 3.发布和分发jar包和配置文件，同时更新配置库 -->
		<antcall target="distrib-mqconfigefiles">
		</antcall>
		<antcall target="distrib-cms_baseline-jars">
		</antcall>
	</target>



	<target name="build-cim-console" description="build cim-console project">
		<echo>build cim-console project:ant build-cim-console</echo>

		<!-- 执行baseconsole中的任务，在 baseconsole目录执行，为后面做的依赖做准备 -->
		<ant dir="${cms_baseline}" target="distrib">
		</ant>
		<!-- 在baseconsole中建立distrib目录，执行cim下的build.xml把creatorcim中文件拷贝到该目录下 -->
		<ant dir="${monitorconsole}" target="baseconsole-install">
			<property name="baseconsole" value="${cms_baseline-distrib}" />
		</ant>
		<!--执行baseconsole中的任务，把 baseconsole中的差异性文件拷贝到distrib中 -->
		<ant dir="${cms_baseline}" target="copy-cim-resource">
		</ant>
		<!--执行baseconsole中的任务，发布war包 -->
		<ant dir="${cms_baseline}" target="war-cim">
		</ant>

		<!-- cmsbaseline<-active-ext [mqservice.jar,mq-transferservice.jar] -->
		<!-- 3.发布和分发jar包和配置文件，同时更新配置库 -->
		<antcall target="distrib-mqconfigefiles">
		</antcall>
		<antcall target="distrib-cms_baseline-jars">
		</antcall>
	</target>


	<target name="distrib-cms_baseline-jars" description="distrib-cms_baseline-jars">
		<!-- -->
		<for
			list="${kettle-lib},${active-ext-lib},${monitorconsole-mqplugin-servicelib},${monitorconsole-lib},${monitorconsole-compilelib}"
			param="destdir">
			<sequential>
				<echo>@{destdir}-------------------------------</echo>
				<antcall target="svn-update-procedure">
					<param name="sourcedir" value="${cms_baseline}/distrib" />
					<param name="filedir" value="@{destdir}" />
					<param name="files" value="mqservice.jar,mq-transferservice.jar" />
				</antcall>
			</sequential>
		</for>

	</target>

	<target name="build-kettle" description="build kettle project">
		<echo>build kettle project</echo>
		<ant dir="${kettle}" target="release" />

	</target>

	<target name="build-kettle-license" description="build kettle project with license.">
		<echo>build kettle project with license.</echo>
		<ant dir="${kettle}" target="release-license" />


	</target>


	<target name="build-kettle-monitor" description="build kettle monitor jars.">
		<echo>kettle monitor jars.</echo>
		<ant dir="${kettle}" target="monitor" />
		<antcall target="distribute-kettle-monitor" />

	</target>
	<target name="distribute-kettle-monitor" description="distribute kettle monitor jars.">
		<echo>distribute kettle monitor jars.</echo>
		<for list="${monitorconsole-etlplugin-servicelib},${monitorconsole-lib}"
			param="destdir">
			<sequential>
				<echo>@{destdir}-------------------------------${kettle-monitor-lib}
				</echo>
				<antcall target="svn-update-procedure">
					<param name="sourcedir" value="${kettle-monitor-lib}" />
					<param name="filedir" value="@{destdir}" />
					<param name="files" value="etl-monitor.jar" />
				</antcall>

				<antcall target="svn-update-procedure">
					<param name="sourcedir" value="${kettle-core-lib}" />
					<param name="filedir" value="@{destdir}" />
					<param name="files"
						value="kettle-core.jar,kettle-db.jar,kettle-engine.jar,kettle-ui-swt.jar" />
				</antcall>
			</sequential>
		</for>

	</target>

	<target name="build-cim" description="build cim project">
		<echo>build cim project:ant build-cim</echo>
		<ant dir="${monitorconsole}" />

	</target>






	<target name="clear-jars" description="clear-jars">
		<delete includeEmptyDirs="true">

			<fileset dir="${filedir}" includes="${files}" />

		</delete>

	</target>
	<!-- 实现文件更新到svn功能 接收三个参数: filedir-要更新的文件所在目录 sourcedir-要更新的文件所在目录 files-要更新的文件 -->
	<target name="svn-update-procedure" description="svn-update-procedure">
		<!-- The value of propStatusProperty can be : normal : no modifications 
			conflicted modified The value of TextStatusProperty can be : non-svn normal 
			: no modifications added missing : item is missing (removed by non-svn command) 
			incomplete deleted replaced modified merged conflicted obstructed ignored 
			external unversioned </echo> -->
		<!-- 判断要放入文件的目录是否存在，如果存在那么就更新到配置库目录 否则创建目录，并将目录提交到配置库 -->
		<available file="${filedir}" type="dir" property="filedir.exist" />
		<if>
			<isset property="filedir.exist" />
			<then>
				<if>
					<equals arg1="${update-svn}" arg2="true" />
					<then>
						<svn username="${svnant.repository.user}" password="${svnant.repository.passwd}"
							failonerror="${failonerror}">
							<status path="${filedir}" textStatusProperty="file-text-status"
								propStatusProperty="file-prop-status"
								lastChangedRevisionProperty="file-lastCommitRevision"
								revisionProperty="file-revision" lastCommitAuthorProperty="file-lastCommitAuthor" />
						</svn>
						<if>
							<or>
								<equals arg1="${file-text-status}" arg2="added" />
								<equals arg1="${file-text-status}" arg2="modified" />
							</or>
							<then>
								<svn failonerror="${failonerror}" username="${svnant.repository.user}"
									password="${svnant.repository.passwd}">
									<commit dir="${filedir}" message="commit ${filedir} to svn" />
								</svn>
							</then>
							<elseif>
								<equals arg1="${file-text-status}" arg2="unversioned" />
								<then>
									<svn failonerror="${failonerror}" username="${svnant.repository.user}"
										password="${svnant.repository.passwd}">
										<add dir="${filedir}" />
										<commit dir="${filedir}" message="commit ${filedir} to svn" />
									</svn>
								</then>
							</elseif>
						</if>
					</then>
				</if>
				<echo>copy ${sourcedir} ${files} to ${filedir}</echo>
				<copy todir="${filedir}" overwrite="true">
					<fileset dir="${sourcedir}" includes="${files}" />
				</copy>
			</then>
			<else>
				
				<if>
					<equals arg1="${update-svn}" arg2="true" />
					<then>
						<echo message="create dir ${filedir}" />
						<mkdir dir="${filedir}" />
						<svn failonerror="${failonerror}" username="${svnant.repository.user}"
							password="${svnant.repository.passwd}">
							<add dir="${filedir}" />
							<commit dir="${filedir}" message="commit ${filedir} to svn" />
						</svn>
						<echo>copy ${sourcedir} ${files} to ${filedir}</echo>
						<copy todir="${filedir}" overwrite="true">
							<fileset dir="${sourcedir}" includes="${files}" />
						</copy>
					</then>
				</if>
			</else>
		</if>
		<if>
			<equals arg1="${update-svn}" arg2="true" />
			<then>
				<for list="${files}" param="file">
					<sequential>
						<svn failonerror="${failonerror}" username="${svnant.repository.user}"
							password="${svnant.repository.passwd}">
							<status path="${filedir}/@{file}" textStatusProperty="file-text-status"
								propStatusProperty="file-prop-status"
								lastChangedRevisionProperty="file-lastCommitRevision"
								revisionProperty="file-revision" lastCommitAuthorProperty="file-lastCommitAuthor" />
						</svn>
						<echo>file status before copy :${file-text-status}</echo>
						<if>
							<equals arg1="${file-text-status}" arg2="conflicted" />
							<then>
								<svn failonerror="${failonerror}" username="${svnant.repository.user}"
									password="${svnant.repository.passwd}">
									<revert file="${filedir}/@{file}" />
									<update>
										<fileset dir="${filedir}">
											<include name="@{file}" />
										</fileset>
									</update>
								</svn>
							</then>
							<elseif>
								<or>
									<equals arg1="${file-text-status}" arg2="normal" />
									<equals arg1="${file-text-status}" arg2="missing" />
									<equals arg1="${file-text-status}" arg2="deleted" />
								</or>
								<then>
									<svn failonerror="${failonerror}" username="${svnant.repository.user}"
										password="${svnant.repository.passwd}">
										<update>
											<fileset dir="${filedir}">
												<include name="@{file}" />
											</fileset>
										</update>
									</svn>
								</then>
							</elseif>
						</if>
					</sequential>
				</for>
				<echo>fixed conflicts,recopy ${sourcedir} ${files} to ${filedir}</echo>
				<copy todir="${filedir}" overwrite="true">
					<fileset dir="${sourcedir}" includes="${files}" />
				</copy>
			</then>
		</if>
		
		<if>
			<equals arg1="${update-svn}" arg2="true" />
			<then>
				<for list="${files}" param="file">
					<sequential>
						<svn failonerror="${failonerror}" username="${svnant.repository.user}"
							password="${svnant.repository.passwd}">
							<status path="${filedir}/@{file}" textStatusProperty="file-text-status"
								propStatusProperty="file-prop-status"
								lastChangedRevisionProperty="file-lastCommitRevision"
								revisionProperty="file-revision" lastCommitAuthorProperty="file-lastCommitAuthor" />
						</svn>
						<echo>file status before commit :${file-text-status}</echo>
						<if>
							<or>
								<equals arg1="${file-text-status}" arg2="added" />
								<equals arg1="${file-text-status}" arg2="modified" />
							</or>
							<then>
								<svn failonerror="${failonerror}" username="${svnant.repository.user}"
									password="${svnant.repository.passwd}">
									<commit message="commit ${filedir}/ @{file} to svn">
										<fileset dir="${filedir}" includes="@{file}" />
									</commit>
								</svn>
							</then>
							<elseif>
								<equals arg1="${file-text-status}" arg2="unversioned" />
								<then>
									<svn failonerror="${failonerror}" username="${svnant.repository.user}"
										password="${svnant.repository.passwd}">
										<add>
											<fileset dir="${filedir}" includes="@{file}" />
										</add>
										<commit message="commit ${filedir}/ @{file} to svn">
											<fileset dir="${filedir}" includes="@{file}" />
										</commit>
									</svn>
								</then>
							</elseif>
						</if>
					</sequential>
				</for>
			</then>
		</if>
	</target>

	<target name="cleanall" description="clean all project">
		<delete dir="${alldistrib}" />
		<delete dir="${bboss-persistent}/distrib" />
		<delete dir="${bboss-taglib}/distrib" />
		<delete dir="${bboss-util}/distrib" />

		<delete dir="${bboss-core}/distrib" />
		<delete dir="${bboss-rpc}/distrib" />

		<delete dir="${bbossevent}/distrib" />

		<delete dir="${bboss-mvc}/distrib" />
		<delete dir="${bboss-soa}/distrib" />
		<delete dir="${bboss-site}/distrib" />
		<delete dir="${bboss-site}/WebRoot/WEB-INF/classes" />
		<delete includeemptydirs="true">
			<fileset dir="${bboss-persistent}/classes" includes="**/*" />
		</delete>
		<delete includeemptydirs="true">
			<fileset dir="${bboss-taglib}/classes" includes="**/*" />
		</delete>
		<delete includeemptydirs="true">
			<fileset dir="${bboss-util}/classes" includes="**/*" />
		</delete>

		<delete includeemptydirs="true">
			<fileset dir="${bboss-core}/classes" includes="**/*" />
		</delete>
		<delete includeemptydirs="true">
			<fileset dir="${bboss-rpc}/classes" includes="**/*" />
		</delete>
		<delete includeemptydirs="true">
			<fileset dir="${bbossevent}/classes" includes="**/*" />
		</delete>


		<delete includeemptydirs="true">
			<fileset dir="${bboss-mvc}/classes" includes="**/*" />
		</delete>

		<delete includeemptydirs="true">
			<fileset dir="${bboss-soa}/classes" includes="**/*" />
		</delete>

	</target>
	<target name="copyversions">
		<copy todir="G:\bbossgroup-2.0-RC2-mvc" overwrite="true">
			<fileset dir="D:\workspace\bbossgroup-2.0-RC2" includes="**/*" />

		</copy>
	</target>


	<target name="build-all" description="build bboss all project">
		<echo>build bboss all project</echo>
		<antcall target="build-bboss-util" />
		<antcall target="build-bboss-core-only" />
		<antcall target="build-bboss-rpc-only" />
		<antcall target="build-persistent" />
		<antcall target="build-bboss-soa" />
		<antcall target="build-bboss-velocity" />

		<antcall target="build-bboss-taglib-only" />
		<antcall target="build-bboss-mvc-only-noresources" />
		<antcall target="build-bboss-security" />
		<antcall target="build-bboss-security-web" />
		<antcall target="build-bboss-event-only" />
		<antcall target="build-bboss-jodconverter-core" />
		<antcall target="build-bboss-plugin-wordpdf" />
		<antcall target="build-bboss-plugin-hessian" />
		<antcall target="build-bboss-schedule" />
		<antcall target="move-all-jars" />
	</target>

	<target name="build-all-jdk6" description="build bboss all project">
		<echo>build bboss all project</echo>
		<antcall target="build-bboss-core-only" />
		<antcall target="build-bboss-rpc-only" />
		<antcall target="build-persistent-jdk6" />
		<antcall target="build-bboss-soa" />
		<antcall target="build-bboss-velocity" />
		<antcall target="build-bboss-taglib-only" />
		<antcall target="build-bboss-mvc-only-noresources" />
		<antcall target="build-bboss-security" />
		<antcall target="build-bboss-security-web" />
		<antcall target="build-bboss-event-only" />
		<antcall target="build-bboss-jodconverter-core" />
		<antcall target="build-bboss-schedule" />
		<antcall target="build-bboss-plugin-wordpdf" />
		<antcall target="build-bboss-plugin-hessian" />
		<antcall target="move-all-jars" />
	</target>

	<target name="build-all-jdk7" description="build bboss all project">
		<echo>build bboss all project</echo>
		<antcall target="build-bboss-util" />
		<antcall target="build-bboss-core-only" />
		<antcall target="build-bboss-rpc-only" />
		<antcall target="build-persistent-jdk7" />
		<antcall target="build-bboss-soa" />
		<antcall target="build-bboss-velocity" />
		<antcall target="build-bboss-taglib-only" />
		<antcall target="build-bboss-mvc-only-noresources" />
		<antcall target="build-bboss-security" />
		<antcall target="build-bboss-security-web" />
		<antcall target="build-bboss-event-only" />
		<antcall target="build-bboss-jodconverter-core" />
		<antcall target="build-bboss-schedule" />
		<antcall target="build-bboss-plugin-wordpdf" />
		<antcall target="build-bboss-plugin-hessian" />
		<antcall target="move-all-jars" />
	</target>

	<target name="move-all-jars" description="move-all-jars">
		<echo>move-all-jars</echo>
		<delete dir="${alldistrib}" />
		<mkdir dir="${alldistrib}" />

		<copy todir="${alldistrib}" overwrite="true">
			<fileset dir="${bboss-util}/distrib" includes="*.jar" />
			<fileset dir="${bboss-persistent}/distrib" includes="frameworkset-pool.jar" />
			<fileset dir="${bboss-taglib}/distrib" includes="*.jar,*.war" />
			<fileset dir="${bboss-soa}/distrib" includes="*.jar" />
			<fileset dir="${bboss-mvc}/distrib" includes="*.jar,*.war" />
			<fileset dir="${bbossevent}/distrib" includes="*.jar" />
			<fileset dir="${bboss-core}/distrib" includes="*.jar" />
			<fileset dir="${bboss-rpc}/distrib" includes="*.jar" />
			<fileset dir="${bboss-velocity}/distrib" includes="*.jar" />
			<fileset dir="${bboss-jodconverter-core}/distrib" includes="*.jar" />
			<fileset dir="${bboss-plugin-wordpdf}/distrib" includes="*.jar" />
			<fileset dir="${bboss-plugin-hessian}/distrib" includes="*.jar" />
			<fileset dir="${bboss-schedule}/distrib" includes="*.jar" />
			<fileset dir="${bboss-security}/distrib" includes="*.jar" />
			<fileset dir="${bboss-security-web}/distrib" includes="*.jar" />

		</copy>
		<delete dir="${bboss-util}/distrib" />
		<delete dir="${bboss-persistent}/distrib" />
		<delete dir="${bboss-taglib}/distrib" />
		<delete dir="${bboss-soa}/distrib" />
		<delete dir="${bboss-mvc}/distrib" />
		<delete dir="${bbossevent}/distrib" />
		<delete dir="${bboss-core}/distrib" />
		<delete dir="${bboss-rpc}/distrib" />
		<delete dir="${bboss-velocity}/distrib" />
		<delete dir="${bboss-jodconverter-core}/distrib" />
		<delete dir="${bboss-plugin-wordpdf}/distrib" />
		<delete dir="${bboss-plugin-hessian}/distrib" />
		<delete dir="${bboss-schedule}/distrib" />
	</target>

	<target name="afterarchive" description="afterarchive">
		<echo>afterarchive clean distrib jars</echo>
		<delete dir="${alldistrib}" />

	</target>

</project>
